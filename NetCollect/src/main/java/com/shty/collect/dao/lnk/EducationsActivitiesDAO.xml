<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.shty.collect.dao.lnk.EducationsActivitiesDAO">


	<!-- 为了返回list 类型而定义的returnMap -->
    <resultMap id="eduactList" type="educationsActivities">
        <!-- <id column="auto_id" property="auto_id" />
        <result column="userId" property="userId" />
        <result column="userName" property="userName" /> -->
    </resultMap>

	<!-- 通过id查询单条数据 
    <select id="selectProfileById" parameterType="Long" resultType="profile">
        select * from profile where id = #{id} limit 1
    </select>
    -->
    
    
	<!-- 返回list 的select 语句，注意 resultMap 的值是指向前面定义好的 -->
    <select id="getEducationsActivitiesByPeopleId" parameterType="Long" resultMap="eduactList">
        select id,dateCreatedTime,dateUpdatedTime,activityname,activityurl from tb_linkedin_educations_activities where educations_id = #{educationId}
    </select>
    
    <!--执行增加操作的SQL语句。以#{name}的形式引用Student参数  
       的name属性，MyBatis将使用反射读取Student参数  
       的此属性。#{name}中name大小写敏感。引用其他  
       的gender等属性与此一致。seGeneratedKeys设置  
       为"true"表明要MyBatis获取由数据库自动生成的主  
       键；keyProperty="id"指定把获取到的主键值注入  
       到Student的id属性--> 
    <insert id="addEducationsActivities" parameterType="EducationsActivities"> 
        insert into tb_linkedin_educations_activities(dateCreatedTime,dateUpdatedTime,activityname,activityurl,educations_id) values
        <foreach collection="list" item="obj" index="index" separator=",">
        (#{obj.dateCreatedTime},#{obj.dateUpdatedTime},#{obj.activityname},#{obj.activityurl},#{obj.educations_id})
 		</foreach>
    </insert>
    
    
   
    
    <!-- 删除数据 -->
    <delete id="deleteEducationsActivities" parameterType="Long">
        delete from tb_linkedin_educations_activities where people_id = #{peopleId}
    </delete>
    
    
    
</mapper>