<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.shty.collect.dao.lnk.SkillsDAO">


	<!-- 为了返回list 类型而定义的returnMap -->
    <resultMap id="skillsList" type="skills">
        <!-- <id column="auto_id" property="auto_id" />
        <result column="userId" property="userId" />
        <result column="userName" property="userName" /> -->
    </resultMap>
    <resultMap id="someBodyEndorList" type="somebodyEndor">
        <!-- <id column="auto_id" property="auto_id" />
        <result column="userId" property="userId" />
        <result column="userName" property="userName" /> -->
    </resultMap>

	<!-- 通过id查询单条数据 
    <select id="selectProfileById" parameterType="Long" resultType="profile">
        select * from profile where id = #{id} limit 1
    </select>
    -->

	<!-- 通过id查询单条数据 -->
    <select id="getSkillBySkillId" parameterType="Long" resultType="Skills">
        select id,skillname from tb_linkedin_skills where id = #{skillId}
    </select>
    
    
    
	<!-- 返回list 的select 语句，注意 resultMap 的值是指向前面定义好的 -->
    <select id="getSkillsByPeopleId" parameterType="Long" resultMap="skillsList">
        select id,skillname from tb_linkedin_skills where people_id = #{peopleId}
    </select>
    
    
    
	<!-- 获得某人的所有背书人背书信息 -->
    <select id="getSomebodyEndor" parameterType="Long" resultMap="someBodyEndorList">
		select e.lnkid,e.fmt_name AS peoplename,e.imgname,s.skillname
		from tb_linkedin_endorsements e
		LEFT JOIN tb_linkedin_skills s
		ON e.skills_id=s.id
		WHERE s.people_id=#{peopleId}
		<!-- ORDER BY e.lnkid ASC -->
    </select>
    
    <!--执行增加操作的SQL语句。以#{name}的形式引用Student参数  
       的name属性，MyBatis将使用反射读取Student参数  
       的此属性。#{name}中name大小写敏感。引用其他  
       的gender等属性与此一致。seGeneratedKeys设置  
       为"true"表明要MyBatis获取由数据库自动生成的主  
       键；keyProperty="id"指定把获取到的主键值注入  
       到Student的id属性--> 
    <insert id="addSkills" parameterType="Skills"  useGeneratedKeys="true" keyProperty="id"> 
        insert into tb_linkedin_skills(dateCreatedTime,skillname,lnkid,people_id) values
        (#{dateCreatedTime},
        #{skillname},
        #{lnkid},
        #{people_id}
        )
    </insert>
    
    
   
    
    <!-- 删除数据 -->
    <delete id="deleteSkills" parameterType="Long">
        delete from tb_linkedin_skills where people_id = #{peopleId}
    </delete>
    
    
    
</mapper>